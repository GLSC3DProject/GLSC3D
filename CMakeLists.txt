cmake_minimum_required(VERSION 3.1)
project(GLSC3D)

if (UNIX)
	list(APPEND CMAKE_C_FLAGS	" -W -Wall")
	list(APPEND CMAKE_CXX_FLAGS	" -W -Wall")
endif()
set(CMAKE_CXX_STANDARD 11)

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/Out)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/SampleOut)

include_directories(Include)
add_subdirectory(Source)

#add_executable(2DFigures Sample/2DFigures.c)
#add_executable(3DFigures Sample/3DFigures.c)
#add_executable(Box Sample/Box.c)
#add_executable(Cone Sample/Cone.c)
#add_executable(Marker2D Sample/Marker2D.c)
#add_executable(Marker3D Sample/Marker3D.cpp)
add_executable(Sample_g_area Sample/Sample_g_area.c)
add_executable(Sample_g_arrow Sample/Sample_g_arrow.c)
add_executable(Sample_g_bird_view Sample/Sample_g_bird_view.c)
add_executable(Sample_g_box Sample/Sample_g_box.c)
add_executable(Sample_g_circle Sample/Sample_g_circle.c)
add_executable(Sample_g_cone Sample/Sample_g_cone.c)
add_executable(Sample_g_contln Sample/Sample_g_contln.c)
add_executable(Sample_g_cylinder Sample/Sample_g_cylinder.c)
add_executable(Sample_g_data_plot Sample/Sample_g_data_plot.c)
add_executable(Sample_g_ellipse Sample/Sample_g_ellipse.c)
add_executable(Sample_g_fan Sample/Sample_g_fan.c)
add_executable(Sample_g_init Sample/Sample_g_init.c)
add_executable(Sample_g_input Sample/Sample_g_input.c)
add_executable(Sample_g_isosurface Sample/Sample_g_isosurface.c)
add_executable(Sample_g_light Sample/Sample_g_light.c)
add_executable(Sample_g_line Sample/Sample_g_line.c)
add_executable(Sample_g_marker Sample/Sample_g_marker.c)
add_executable(Sample_g_move_g_plot Sample/Sample_g_move_g_plot.c)
add_executable(Sample_g_polygon Sample/Sample_g_polygon.c)
add_executable(Sample_g_polyline Sample/Sample_g_polyline.c)
add_executable(Sample_g_prism Sample/Sample_g_prism.c)
add_executable(Sample_g_pyramid Sample/Sample_g_pyramid.c)
add_executable(Sample_g_rectangle Sample/Sample_g_rectangle.c)
add_executable(Sample_g_sphere Sample/Sample_g_sphere.c)
add_executable(Sample_g_text Sample/Sample_g_text.c)
add_executable(Sample_g_transparent Sample/Sample_g_transparent.c)
add_executable(Sample_g_triangle Sample/Sample_g_triangle.c)
add_executable(Sample_off_screen_rendering Sample/Sample_off_screen_rendering.c)

#target_link_libraries(2DFigures glsc3d)
#target_link_libraries(3DFigures glsc3d)
#target_link_libraries(Box glsc3d)
#target_link_libraries(Cone glsc3d)
#target_link_libraries(Marker2D glsc3d)
#target_link_libraries(Marker3D glsc3d)
target_link_libraries(Sample_g_area glsc3d)
target_link_libraries(Sample_g_arrow glsc3d)
target_link_libraries(Sample_g_bird_view glsc3d)
target_link_libraries(Sample_g_box glsc3d)
target_link_libraries(Sample_g_circle glsc3d)
target_link_libraries(Sample_g_cone glsc3d)
target_link_libraries(Sample_g_contln glsc3d)
target_link_libraries(Sample_g_cylinder glsc3d)
target_link_libraries(Sample_g_data_plot glsc3d)
target_link_libraries(Sample_g_ellipse glsc3d)
target_link_libraries(Sample_g_fan glsc3d)
target_link_libraries(Sample_g_init glsc3d)
target_link_libraries(Sample_g_input glsc3d)
target_link_libraries(Sample_g_isosurface glsc3d)
target_link_libraries(Sample_g_light glsc3d)
target_link_libraries(Sample_g_line glsc3d)
target_link_libraries(Sample_g_marker glsc3d)
target_link_libraries(Sample_g_move_g_plot glsc3d)
target_link_libraries(Sample_g_polygon glsc3d)
target_link_libraries(Sample_g_polyline glsc3d)
target_link_libraries(Sample_g_prism glsc3d)
target_link_libraries(Sample_g_pyramid glsc3d)
target_link_libraries(Sample_g_rectangle glsc3d)
target_link_libraries(Sample_g_sphere glsc3d)
target_link_libraries(Sample_g_text glsc3d)
target_link_libraries(Sample_g_transparent glsc3d)
target_link_libraries(Sample_g_triangle glsc3d)
target_link_libraries(Sample_off_screen_rendering glsc3d)

#install(TARGETS glsc3d RUNTIME DESTINATION bin)